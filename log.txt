Log for the pytocpp transpilation process of file 'test.py':

Generated tokens:
[1:0: TT_import:None, 1:6: TT_identifier:examples, 1:15: TT_dot:None, 1:16: TT_identifier:fib, 1:20: TT_eol:None, 2:1: TT_eol:None, 3:0: TT_identifier:print, 3:5: TT_lparen:None, 3:6: TT_identifier:fib, 3:9: TT_lparen:None, 3:10: TT_int:10, 3:12: TT_rparen:None, 3:13: TT_rparen:None, 3:14: TT_eol:None, 4:-1: TT_eof:None]

Generated ast:
Module[
    Children[    
        FuncDefNode[
            Name: fib
            Args: n
            Children[                
                AssignNode[
                    Name: n
                    Left Expression[
                        None
                    ]
                    Value[
                        None
                    ]
                    Type: Any
                    Id: 4
                ]
                IfNode[
                    Condition[
                        ConditionExpressionNode[
                            Left[ 
                                VarNode[
                                    Name: n
                                    Type: Any
                                    Id: 38
                                ]
                            ]
                            Operator: '<='  
                            Right:[
                                NumberNode[
                                    Value: 0
                                    Type: int
                                    Id: 39
                                ]
                            ]    
                            Id: 37
                        ]
                    Children[                        
                        ReturnNode[
                            ReturnValue[
                                NumberNode[
                                    Value: 0
                                    Type: int
                                    Id: 41
                                ]
                            ]
                            Id: 40
                        ]
                    ]
                    Len: 1
                    Id: 36
                ]
                ElifNode[
                    Condition[
                        ConditionExpressionNode[
                            Left[ 
                                VarNode[
                                    Name: n
                                    Type: Any
                                    Id: 26
                                ]
                            ]
                            Operator: '=='  
                            Right:[
                                NumberNode[
                                    Value: 1
                                    Type: int
                                    Id: 27
                                ]
                            ]    
                            Id: 25
                        ]
                    PreviousConditions[
                        
                        IfNode[
                            Condition[
                                ConditionExpressionNode[
                                    Left[ 
                                        VarNode[
                                            Name: n
                                            Type: Any
                                            Id: 38
                                        ]
                                    ]
                                    Operator: '<='  
                                    Right:[
                                        NumberNode[
                                            Value: 0
                                            Type: int
                                            Id: 39
                                        ]
                                    ]    
                                    Id: 37
                                ]
                            Children[                                
                                ReturnNode[
                                    ReturnValue[
                                        NumberNode[
                                            Value: 0
                                            Type: int
                                            Id: 41
                                        ]
                                    ]
                                    Id: 40
                                ]
                            ]
                            Len: 1
                            Id: 36
                        ]
                    ]
                    Children[                        
                        ReturnNode[
                            ReturnValue[
                                NumberNode[
                                    Value: 1
                                    Type: int
                                    Id: 35
                                ]
                            ]
                            Id: 34
                        ]
                    ]
                    Len: 1
                    Id: 24
                ]
                ElseNode[
                    Condition[
                        None
                    PreviousConditions[
                        
                        ElifNode[
                            Condition[
                                ConditionExpressionNode[
                                    Left[ 
                                        VarNode[
                                            Name: n
                                            Type: Any
                                            Id: 26
                                        ]
                                    ]
                                    Operator: '=='  
                                    Right:[
                                        NumberNode[
                                            Value: 1
                                            Type: int
                                            Id: 27
                                        ]
                                    ]    
                                    Id: 25
                                ]
                            PreviousConditions[
                                
                                IfNode[
                                    Condition[
                                        ConditionExpressionNode[
                                            Left[ 
                                                VarNode[
                                                    Name: n
                                                    Type: Any
                                                    Id: 38
                                                ]
                                            ]
                                            Operator: '<='  
                                            Right:[
                                                NumberNode[
                                                    Value: 0
                                                    Type: int
                                                    Id: 39
                                                ]
                                            ]    
                                            Id: 37
                                        ]
                                    Children[                                        
                                        ReturnNode[
                                            ReturnValue[
                                                NumberNode[
                                                    Value: 0
                                                    Type: int
                                                    Id: 41
                                                ]
                                            ]
                                            Id: 40
                                        ]
                                    ]
                                    Len: 1
                                    Id: 36
                                ]
                            ]
                            Children[                                
                                ReturnNode[
                                    ReturnValue[
                                        NumberNode[
                                            Value: 1
                                            Type: int
                                            Id: 35
                                        ]
                                    ]
                                    Id: 34
                                ]
                            ]
                            Len: 1
                            Id: 24
                        ]
                        IfNode[
                            Condition[
                                ConditionExpressionNode[
                                    Left[ 
                                        VarNode[
                                            Name: n
                                            Type: Any
                                            Id: 38
                                        ]
                                    ]
                                    Operator: '<='  
                                    Right:[
                                        NumberNode[
                                            Value: 0
                                            Type: int
                                            Id: 39
                                        ]
                                    ]    
                                    Id: 37
                                ]
                            Children[                                
                                ReturnNode[
                                    ReturnValue[
                                        NumberNode[
                                            Value: 0
                                            Type: int
                                            Id: 41
                                        ]
                                    ]
                                    Id: 40
                                ]
                            ]
                            Len: 1
                            Id: 36
                        ]
                    ]
                    Children[                        
                        ReturnNode[
                            ReturnValue[
                                BinOpNode[
                                    Left[ 
                                        FuncCallNode[
                                            Name: fib
                                            Args[                                                
                                                BinOpNode[
                                                    Left[ 
                                                        VarNode[
                                                            Name: n
                                                            Type: Any
                                                            Id: 46
                                                        ]
                                                    ]
                                                    Operator: '-'  
                                                    Right:[
                                                        NumberNode[
                                                            Value: 1
                                                            Type: int
                                                            Id: 47
                                                        ]
                                                    ]    
                                                    Id: 45
                                                ]
                                            ]
                                            Len: 1
                                            Id: 44
                                            Parent: BinOpNode
                                        ]
                                    ]
                                    Operator: '+'  
                                    Right:[
                                        FuncCallNode[
                                            Name: fib
                                            Args[                                                
                                                BinOpNode[
                                                    Left[ 
                                                        VarNode[
                                                            Name: n
                                                            Type: Any
                                                            Id: 50
                                                        ]
                                                    ]
                                                    Operator: '-'  
                                                    Right:[
                                                        NumberNode[
                                                            Value: 2
                                                            Type: int
                                                            Id: 51
                                                        ]
                                                    ]    
                                                    Id: 49
                                                ]
                                            ]
                                            Len: 1
                                            Id: 48
                                            Parent: BinOpNode
                                        ]
                                    ]    
                                    Id: 43
                                ]
                            ]
                            Id: 42
                        ]
                    ]
                    Len: 1
                    Id: 23
                ]
            ]
            Len: 4
            Id: 3
        ]
        ImportNode[
            Path: examples/fib.py
            Id: 52
        ]
        FuncCallNode[
            Name: print
            Args[                
                FuncCallNode[
                    Name: fib
                    Args[                        
                        NumberNode[
                            Value: 10
                            Type: int
                            Id: 55
                        ]
                    ]
                    Len: 1
                    Id: 54
                    Parent: FuncCallNode
                ]
            ]
            Len: 1
            Id: 53
            Parent: ASTBaseNode
        ]
    ]
    Len: 3
    Id: 0
]

